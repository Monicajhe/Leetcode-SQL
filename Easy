# 175. Combine Two Tables

SELECT FirstName, LastName, City, State
FROM Person 
LEFT JOIN Address 
USING (PersonId)

"""

# 176. Second Highest Salary
1)
/* the first select with out FROM is to return null if no match is found. Some databases may not support it. */
SELECT(SELECT Distinct Salary 
FROM Employee
ORDER BY 1 DESC 
LIMIT 1 OFFSET 1) AS SecondHighestSalary; 

2)
/* Using MAX() will return a NULL if the value doesn't exist. */
SELECT MAX(Salary) AS SecondHighestSalary
FROM Employee 
WHERE Salary < (SELECT MAX(Salary)
                FROM Employee);

"""

# 181. Employees Earning More Than Their Managers
1) 
/* self join */
SELECT e1.Name AS Employee
FROM Employee e1, Employee e2
WHERE e1.ManagerId = e2.Id
AND e1.Salary > e2.Salary;

2) Inner join 
SELECT e.Name AS Employee 
FROM Employee e
INNER JOIN Employee m
ON e.ManagerId = m.Id
WHERE e.Salary > m.Salary;

"""

#182. Duplicate Emails
1) fastest
SELECT Email
FROM Person
GROUP BY Email
HAVING COUNT(Id) > 1;

2) self join 
SELECT DISTINCT p1.Email
FROM Person p1, Person p2
WHERE p1.Email = p2.Email
AND p1.Id < p2.Id

3) inner join 
SELECT DISTINCT p1.Email
FROM Person p1
JOIN Person p2
ON p1.Email = p2.Email AND p1.Id < p2.Id

"""

# 183. Customers Who Never Order
1) left join, Runtime: 496 ms 
SELECT Name AS Customers
FROM Customers c
LEFT JOIN Orders o
ON c.Id = o.CustomerId
WHERE o.Id IS NULL;

2) subquery, Runtime: 416 ms
SELECT Name AS Customers
FROM Customers c
WHERE Id NOT IN (SELECT CustomerId
                 FROM Orders);

"""

# 196. Delete Duplicate Emails
/*
DELETE p1 FROM Person p1, Person p2
WHERE p1.Email = p2.Email
AND p1.Id > p2.Id;
*/

DELETE FROM Person 
WHERE Id NOT IN (SELECT t.Id
                 FROM (SELECT MIN(Id) AS Id
                       FROM Person 
                       GROUP BY Email) t);
